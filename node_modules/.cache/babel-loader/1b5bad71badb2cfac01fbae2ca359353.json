{"ast":null,"code":"var _jsxFileName = \"/Users/Gokul015/Desktop/shoppingSite/shopping-site/src/js/components/SelectCategory.js\";\nimport React, { Component } from 'react';\nimport { selectCategory } from \"../actions/index\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    selectCategory: category => dispatch(selectCategory(category))\n  };\n}\n\n;\n\nclass ConnectedCategory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const category = event.target.value;\n\n      if (this.props.toAdd) {\n        this.props.onSelection(category);\n      } else {\n        this.props.selectCategory(category);\n      }\n    };\n  }\n\n  render() {\n    const categories = this.props.categories;\n    return /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control form-control-sm\",\n      id: \"category\",\n      onChange: this.handleChange,\n      style: {\n        width: '20rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, this.props.toAdd ? /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      Selected: true,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 23\n      }\n    }, \"Select a category\") : /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      Selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 23\n      }\n    }, \"All\"), categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n      value: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, category)));\n  }\n\n}\n\nconst SelectCategory = connect(mapStateToProps, mapDispatchToProps)(ConnectedCategory);\nexport default SelectCategory;","map":{"version":3,"sources":["/Users/Gokul015/Desktop/shoppingSite/shopping-site/src/js/components/SelectCategory.js"],"names":["React","Component","selectCategory","connect","mapStateToProps","state","categories","mapDispatchToProps","dispatch","category","ConnectedCategory","constructor","props","handleChange","event","target","value","toAdd","onSelection","render","width","map","SelectCategory"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AACzB,SAAO;AAAEC,IAAAA,UAAU,EAAED,KAAK,CAACC;AAApB,GAAP;AACP,CAFD;;AAIA,SAASC,kBAAT,CAA4BC,QAA5B,EAAqC;AACjC,SAAO;AAAEN,IAAAA,cAAc,EAAGO,QAAD,IAAcD,QAAQ,CAACN,cAAc,CAACO,QAAD,CAAf;AAAxC,GAAP;AACH;;AAAA;;AAED,MAAMC,iBAAN,SAAgCT,SAAhC,CAA0C;AACtCU,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAIlBC,YAJkB,GAIFC,KAAD,IAAW;AACtB,YAAML,QAAQ,GAAIK,KAAK,CAACC,MAAN,CAAaC,KAA/B;;AACA,UAAG,KAAKJ,KAAL,CAAWK,KAAd,EAAoB;AAChB,aAAKL,KAAL,CAAWM,WAAX,CAAuBT,QAAvB;AACH,OAFD,MAGI;AACJ,aAAKG,KAAL,CAAWV,cAAX,CAA0BO,QAA1B;AACC;AACJ,KAZiB;AAEjB;;AAaDU,EAAAA,MAAM,GAAE;AACJ,UAAMb,UAAU,GAAG,KAAKM,KAAL,CAAWN,UAA9B;AACA,wBACI;AAAQ,MAAA,SAAS,EAAC,8BAAlB;AAAiD,MAAA,EAAE,EAAG,UAAtD;AAAiE,MAAA,QAAQ,EAAI,KAAKO,YAAlF;AAAgG,MAAA,KAAK,EAAE;AAACO,QAAAA,KAAK,EAAC;AAAP,OAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,KAAL,CAAWK,KAAX,gBACK;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAiB,MAAA,QAAQ,MAAzB;AAA0B,MAAA,QAAQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADL,gBAEK;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAiB,MAAA,QAAQ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHV,EAKKX,UAAU,CAACe,GAAX,CAAeZ,QAAQ,iBACpB;AAAQ,MAAA,KAAK,EAAEA,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BA,QAA1B,CADH,CALL,CADJ;AAWH;;AA7BqC;;AAgC1C,MAAMa,cAAc,GAAGnB,OAAO,CAACC,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CG,iBAA5C,CAAvB;AAEA,eAAeY,cAAf","sourcesContent":["import React, { Component } from 'react' ;\nimport { selectCategory } from \"../actions/index\" ;\nimport { connect } from \"react-redux\" ;\n\nconst mapStateToProps = state => {\n        return { categories: state.categories} ;\n};        \n\nfunction mapDispatchToProps(dispatch){\n    return { selectCategory: (category) => dispatch(selectCategory(category))};\n};\n\nclass ConnectedCategory extends Component {\n    constructor(props){\n        super(props);   \n    }\n\n    handleChange = (event) => {\n        const category  = event.target.value ;\n        if(this.props.toAdd){\n            this.props.onSelection(category) ;\n        }\n        else{\n        this.props.selectCategory(category); \n        }  \n    };\n\n\n    render(){\n        const categories = this.props.categories ;\n        return(\n            <select className=\"form-control form-control-sm\" id = \"category\" onChange = {this.handleChange} style={{width:'20rem'}}> \n                {this.props.toAdd\n                    ? <option value=\"\" Selected required>Select a category</option>\n                    : <option value=\"\" Selected>All</option>\n                }\n                {categories.map(category => (\n                    <option value={category}>{category}</option>\n                ))}\n            </select>\n        );\n    }\n}\n\nconst SelectCategory = connect(mapStateToProps,mapDispatchToProps)(ConnectedCategory) ;\n\nexport default SelectCategory ;"]},"metadata":{},"sourceType":"module"}