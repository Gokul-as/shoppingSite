{"version":3,"sources":["js/components/List.js","js/components/SelectCategory.js","js/actions/index.js","js/constants/action-types.js","js/components/Customer.js","js/components/AddProductForm.js","js/components/AddCategoryForm.js","js/components/Admin.js","js/components/App.js","js/reducers/index.js","js/store/index.js","serviceWorker.js","index.js"],"names":["List","connect","state","selectedCategory","products","filter","el","category","class","map","product","key","id","className","style","width","name","brandName","price","ConnectedCategory","props","handleChange","event","target","value","toAdd","onSelection","selectCategory","categories","this","onChange","Selected","required","selected","Component","SelectCategory","dispatch","type","payload","Customer","connectedForm","setState","handleSubmit","preventDefault","newProduct","addProduct","handleSelection","onSubmit","placeholder","AddProductForm","connectedCategoryForm","console","log","addCategory","AddCategoryForm","Admin","App","rel","href","integrity","crossOrigin","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","path","src","initialState","description","rootReducer","action","store","createStore","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e00894ef.chunk.js","sourcesContent":["import React from 'react' ;\nimport { connect } from 'react-redux' ;\n\nconst mapStateToProps = state => {\n    if(state.selectedCategory == \"\")\n        return { products : state.products } ;\n    else\n        return {products : state.products.filter(el => el.category == state.selectedCategory)} ;    \n};\n\nconst connectedList = ({ products }) => (\n    <center>\n        <div class=\"card-columns\">\n            {products.map(product => (\n                <div key = {product.id} className=\"card border-dark mb-3\" style={{width: '18rem'}}>\n                    <div className=\"card-body\">\n                    <h5 className=\"card-title\">{product.name}</h5>\n                    <h6 className=\"card-subtitle mb-2 text-muted\">{product.brandName}</h6>\n                    <p className=\"card-text\">Category : {product.category}</p>\n                    <h4>Rs {product.price} /-</h4>\n                    <button className=\"btn btn-dark\">Buy</button>\n                    </div>\n                </div> \n            ))}\n        </div>  \n    </center>\n);\n\nconst List = connect(mapStateToProps)(connectedList) ;\n\nexport default List ;\n\n","import React, { Component } from 'react' ;\nimport { selectCategory } from \"../actions/index\" ;\nimport { connect } from \"react-redux\" ;\n\nconst mapStateToProps = state => {\n        return { categories: state.categories, selectedCategory: state.selectedCategory} ;\n};        \n\nfunction mapDispatchToProps(dispatch){\n    return { selectCategory: (category) => dispatch(selectCategory(category))};\n};\n\nclass ConnectedCategory extends Component {\n    constructor(props){\n        super(props);   \n    }\n\n    handleChange = (event) => {\n        const category  = event.target.value ;\n        if(this.props.toAdd){\n            this.props.onSelection(category) ;\n        }\n        else{\n        this.props.selectCategory(category); \n        }  \n    };\n\n\n    render(){\n        const categories = this.props.categories ;\n        return(\n            <select className=\"form-control form-control-sm\" id = \"category\" onChange = {this.handleChange} style={{width:'20rem'}}> \n                {this.props.toAdd\n                    ? <option value=\"\" Selected required>Select a category</option> :  <option value=\"\">All</option>      \n                }\n                {categories.map(category => {return category == this.props.selectedCategory ? <option value={category} selected>{category}</option> : <option value={category} >{category}</option>})}\n            </select>\n        );\n    }\n}\n\nconst SelectCategory = connect(mapStateToProps,mapDispatchToProps)(ConnectedCategory) ;\n\nexport default SelectCategory ;","import { ADD_PRODUCT, ADD_CATEGORY } from \"../constants/action-types\" ;\nimport { SELECT_CATEGORY } from \"../constants/action-types\";\n\nexport function addProduct(payload){\n    return {\n        type : ADD_PRODUCT,\n        payload\n    };\n};\n\nexport function selectCategory(payload){\n    return {\n        type : SELECT_CATEGORY,\n        payload\n    };\n};\n\nexport function addCategory(payload){\n    return {\n        type : ADD_CATEGORY,\n        payload\n    };\n};","export const ADD_PRODUCT = \"ADD_PRODUCT\" ;\nexport const SELECT_CATEGORY = \"SELECT_CATEGORY\" ;\nexport const ADD_CATEGORY = \"ADD_CATEGORY\" ;","import React from 'react' ;\nimport List from './List' ;\nimport SelectCategory from './SelectCategory' ;\n\nconst Customer = () => (\n    <div>\n        <br />\n        <label>Select Category : </label>\n        <SelectCategory />\n        <br />\n        <List />\n    </div>\n);\n\nexport default Customer ;","import React, { Component } from 'react' ;\nimport { addProduct } from \"../actions/index\" ;\nimport { connect } from \"react-redux\" ;\nimport SelectCategory from './SelectCategory';\n\nfunction mapDispatchToProps(dispatch){\n    return { addProduct: product => dispatch(addProduct(product))};\n} \n\nclass connectedForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            name: \"\",\n            brandName: \"\" ,\n            category: \"\",\n            price: \"\"\n        } ;   \n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.id] : event.target.value})\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault() ;\n        const newProduct  = this.state ;\n        this.props.addProduct(newProduct) ;\n        this.setState({\n            name: \"\",\n            brandName: \"\" ,\n            category: \"\",\n            price: \"\"\n        });\n    };\n\n    handleSelection = (selected) => {\n        this.setState({\n            category: selected\n        }); \n    }\n\n    render(){\n        const newProduct = this.state ;\n\n        return(\n            <form onSubmit = { this.handleSubmit }>\n                <br />\n                <div className=\"form-row\">\n                    <div className=\"col\">\n                        <label>Product Name</label>\n                        <input \n                            type = \"text\"\n                            id = \"name\"\n                            value = {newProduct.name}\n                            onChange = {this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"First name\"\n                            required\n                        />\n                    </div>\n                    <div className=\"col\">\n                        <label>Brand Name</label>\n                        <input \n                            type = \"text\"\n                            id = \"brandName\"\n                            value = {newProduct.brandName}\n                            onChange = {this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Brand\"\n                            required\n                        />\n                    </div>\n                </div>\n                <br />\n                <div className=\"form-row\">\n                    <div className=\"col\">\n                        <label>Category</label>\n                        <SelectCategory onSelection = {this.handleSelection} toAdd={true}/>\n                    </div>\n                    <div className=\"col\">\n                        <label>Price</label>\n                        <input \n                            type = \"number\"\n                            id = \"price\"\n                            value = {newProduct.price}\n                            onChange = {this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Price\"\n                            required\n                        />\n                    </div>\n                </div>\n                <br />\n                <button type=\"submit\" className=\"btn btn-primary\">Add Product</button>\n            </form>\n        );\n    }\n}\n\nconst AddProductForm = connect(null,mapDispatchToProps)(connectedForm) ;\n\nexport default AddProductForm ;\n\n","import React, { Component } from 'react' ;\nimport { addCategory } from \"../actions/index\" ;\nimport { connect } from \"react-redux\" ;\n\n\nfunction mapDispatchToProps(dispatch){\n    return { addCategory: category => dispatch(addCategory(category))};\n}; \n\nclass connectedCategoryForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            category: \"\"\n        } ;   \n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.id] : event.target.value})\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault() ;\n        const category  = this.state.category ;\n        console.log(category);\n        this.props.addCategory(category) ;\n        this.setState({\n            category: \"\",\n        });\n    };\n\n    render(){\n        const category = this.state.category ;\n\n        return(\n            <form onSubmit = { this.handleSubmit }>\n                <br />\n                <div className=\"form-row\">\n                    <div className=\"col\">\n                        <label>Category</label>\n                        <input \n                            type = \"text\"\n                            id = \"category\"\n                            value = {category}\n                            onChange = {this.handleChange}\n                            className=\"form-control\"\n                            placeholder=\"Category\"\n                            required\n                        />\n                        <br />\n                        <button type=\"submit\" className=\"btn btn-primary\">Add Category</button>\n                    </div>\n                        \n                </div>\n                <br />\n            </form>\n        );\n    }\n}\n\nconst AddCategoryForm = connect(null,mapDispatchToProps)(connectedCategoryForm) ;\n\nexport default AddCategoryForm ;\n\n","import React from 'react' ;\nimport AddProductForm from \"./AddProductForm\";\nimport AddCategoryForm from \"./AddCategoryForm\";\n\n\nconst Admin = () => (\n    <div>\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <div class=\"card\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">Add new Product :</h5>\n                    <AddProductForm />\n                </div>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"card\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">Add new Category :</h5>\n                    <AddCategoryForm />\n                </div>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nexport default Admin ;","import React from 'react' ;\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Customer from './Customer' ;\nimport Admin from './Admin' ;\n\nconst App = () => (\n    <div>\n        <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\n        crossOrigin=\"anonymous\"\n        />\n\n        <Router>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"#\">Cognitica AI</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item active\">\n                            <Link className=\"nav-link\" to=\"/\">Customer</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/Admin\">Admin</Link>\n                        </li>    \n                    </ul>\n                </div>\n            </nav>\n            <Switch>\n                <Route path=\"/Admin\">\n                    <Admin />\n                </Route>\n                <Route path=\"/\">\n                    <Customer />\n                </Route>\n            </Switch>\n\n\n            <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" \n            integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" \n            crossOrigin=\"anonymous\"></script>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\" \n            integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\" \n            crossOrigin=\"anonymous\"></script>\n            <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\" \n            integrity=\"sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy\" \n            crossOrigin=\"anonymous\"></script>\n        </Router>\n    </div>\n);\n\nexport default App ;","import { ADD_PRODUCT } from \"../constants/action-types\";\nimport { SELECT_CATEGORY } from \"../constants/action-types\";\nimport { ADD_CATEGORY } from \"../constants/action-types\";\n\nconst initialState = {\n    selectedCategory : \"\",\n    categories : [\"Mobiles\",\"Laptops\",\"Speakers\",\"Headsets\"],\n    products : [\n        {\n            name : 'X2312',\n            brandName : 'Nokia',\n            description : \"desc\",\n            category : 'Mobiles',\n            price : 11999\n        },\n        {\n            name : 'Mi 9',\n            brandName : 'Redmi',\n            description : \"desc\",\n            category : 'Mobiles',\n            price : 21999\n        },\n        {\n            name : 'X15 15\"',\n            brandName : 'DELL',\n            description : \"desc\",\n            category : 'Laptops',\n            price : 51999\n        },\n        {\n            name : 'QWERTY',\n            brandName : 'HP',\n            description : \"desc\",\n            category : 'Laptops',\n            price : 83999\n        },\n        {\n            name : 'Flip',\n            brandName : 'JBL',\n            description : \"desc\",\n            category : 'Speakers',\n            price : 3999\n        },\n        {\n            name : 'Airpods',\n            brandName : 'Apple',\n            description : \"desc\",\n            category : 'Headsets',\n            price : 24999\n        },{\n            name : 'BL123',\n            brandName : 'Sony',\n            description : \"desc\",\n            category : 'Headsets',\n            price : 1999\n        },\n    ]\n};\n\nfunction rootReducer(state = initialState, action){\n\n    switch(action.type){\n        \n        case ADD_PRODUCT :\n            return {\n                ...state,\n                products : [...state.products, action.payload]\n            } ;\n\n        case SELECT_CATEGORY :\n            return {\n                ...state, selectedCategory : action.payload\n            } ;\n        \n        case ADD_CATEGORY :\n            return {\n                ...state,\n                categories : [...state.categories, action.payload]\n            } ;    \n        \n        default :\n            return state ;\n    }\n    \n};\n\nexport default rootReducer ;","import {createStore} from 'redux' ;\nimport rootReducer from '../reducers/index' ;\n\nconst store = createStore(rootReducer) ;\n\nexport default store ;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './js/components/App';\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/index\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n       <App />\n  </Provider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}